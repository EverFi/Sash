
div#badge-show
  div.row
    div.span2
      img(src=badge.imageUrl)
      img(src=badge.grayedUrl)
    div.span8
      h1 #{badge.name}
  div.row
    div.offset2
      div.description
        strong
          | Badge Description:
        br
        != badge.description
  if badge.criteria
    div.row
      div.offset2.criteria
        strong
          | Badge Criteria:
        br
        != badge.criteria
  if badge.facebook_text
    div.row
      div.offset2.facebook_text
        strong
          | Facebook Share Text
        br
        != badge.facebook_text
  if badge.twitter_text
    div.row
      div.offset2.criteria
        strong
          | Twitter Share Text:
        br
        != badge.twitter_text
  if badge.link
    div.row
      div.offset2.criteria
        strong
          | Share Link: 
        != badge.link
  if badge.version
    div.row
      div.offset2.version
        strong
          | Version:  
        = badge.version
  div.row
    div.offset2.issuer 
      strong
        | Issuer:  
      | #{issuer.name} 
      - if(issuer.origin)
        | (
        a(href=issuer.origin, target='_blank')= issuer.origin
        | )
  if badge.tags.length > 0
    div.row
      div.tags.offset2
        strong
          | Tags: 
        each tag in badge.tags
          span.tag
            = tag
  div.row
    div.url.offset2
      strong Issue URL:  
      = badge.slugUrl

  div.row
    div.url.offset2
      strong Slug:  
      = badge.slug

  div.row
    div.url.offset2
      select.select-user(disabled="disabled")
        option(value="") Loading Users...
      br
      button.btn.issue Issue Badge
      button.btn.revoke Revoke Badge

  div.row
    a(href="/badges/#{badge.slug}/edit") Edit Me
    form(action="/badges/#{badge.slug}", method='post', class="delete", data-confirm='Are you sure you want to delete this badge?')
      input(type="hidden", value="delete", name="_method")
      input(type="submit", value="Delete", class="delete")

  script
    $.get('/users/#{badge.issuer_id}/all', function(users){
      $('.select-user').find('option').html('Users');
      $.each(users, function (index, user){
        var opt = $('<option></option>');
        $(opt)
          .html( user.username )
          .attr( 'value', user.username );
        $('.select-user')
          .append( opt )
          .removeAttr( 'disabled' );
      });
    });

    $('.issue').click(function(){
      var username = $('.select-user').val();
      if ( username ) {
        $.ajax({
          type: "POST",
          url: '/badges/issue/#{badge.slug}',
          data: {username:username},
          success: function(data){
            var msg;
            if ( data.earned === true ) {
              msg = "'#{badge.name}' has been issued to " + username
            } else {
              msg = data.message;
            }
            alertify.alert( msg );
          },
        });
      }
    });

    $('.revoke').click(function(){
      var username = $('.select-user').val();
      if ( username ) {
        $.ajax({
          type: "POST",
          url: '/badges/revoke/#{badge._id}',
          data: {username:username},
          success: function(data){
            if ( data.revoked ) {
              alertify.alert( "Revoked '#{badge.name}' from user " + username );
            } else {
              alertify.error( "Could not revoke '#{badge.name}' from " + username );
            }
          }
        });
      }
    });























